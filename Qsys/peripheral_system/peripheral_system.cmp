	component peripheral_system is
		port (
			button_pio_external_connection_export : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- export
			button_pio_irq_irq                    : out std_logic;                                        -- irq
			high_res_timer_irq_irq                : out std_logic;                                        -- irq
			jtag_uart_irq_irq                     : out std_logic;                                        -- irq
			led_pio_external_connection_export    : out std_logic_vector(7 downto 0);                     -- export
			peripheral_bridge_s0_waitrequest      : out std_logic;                                        -- waitrequest
			peripheral_bridge_s0_readdata         : out std_logic_vector(31 downto 0);                    -- readdata
			peripheral_bridge_s0_readdatavalid    : out std_logic;                                        -- readdatavalid
			peripheral_bridge_s0_burstcount       : in  std_logic_vector(0 downto 0)  := (others => 'X'); -- burstcount
			peripheral_bridge_s0_writedata        : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			peripheral_bridge_s0_address          : in  std_logic_vector(7 downto 0)  := (others => 'X'); -- address
			peripheral_bridge_s0_write            : in  std_logic                     := 'X';             -- write
			peripheral_bridge_s0_read             : in  std_logic                     := 'X';             -- read
			peripheral_bridge_s0_byteenable       : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			peripheral_bridge_s0_debugaccess      : in  std_logic                     := 'X';             -- debugaccess
			peripheral_subsys_clk_in_clk          : in  std_logic                     := 'X';             -- clk
			peripheral_subsys_reset_in_reset_n    : in  std_logic                     := 'X';             -- reset_n
			sys_clk_timer_irq_irq                 : out std_logic                                         -- irq
		);
	end component peripheral_system;

