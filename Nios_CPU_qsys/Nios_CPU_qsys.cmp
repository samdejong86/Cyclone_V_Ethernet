	component Nios_CPU_qsys is
		port (
			clk_clk                                                    : in    std_logic                     := 'X';             -- clk
			mem_if_lpddr2_emif_0_pll_sharing_pll_mem_clk               : out   std_logic;                                        -- pll_mem_clk
			mem_if_lpddr2_emif_0_pll_sharing_pll_write_clk             : out   std_logic;                                        -- pll_write_clk
			mem_if_lpddr2_emif_0_pll_sharing_pll_locked                : out   std_logic;                                        -- pll_locked
			mem_if_lpddr2_emif_0_pll_sharing_pll_write_clk_pre_phy_clk : out   std_logic;                                        -- pll_write_clk_pre_phy_clk
			mem_if_lpddr2_emif_0_pll_sharing_pll_addr_cmd_clk          : out   std_logic;                                        -- pll_addr_cmd_clk
			mem_if_lpddr2_emif_0_pll_sharing_pll_avl_clk               : out   std_logic;                                        -- pll_avl_clk
			mem_if_lpddr2_emif_0_pll_sharing_pll_config_clk            : out   std_logic;                                        -- pll_config_clk
			mem_if_lpddr2_emif_0_pll_sharing_pll_mem_phy_clk           : out   std_logic;                                        -- pll_mem_phy_clk
			mem_if_lpddr2_emif_0_pll_sharing_afi_phy_clk               : out   std_logic;                                        -- afi_phy_clk
			mem_if_lpddr2_emif_0_pll_sharing_pll_avl_phy_clk           : out   std_logic;                                        -- pll_avl_phy_clk
			mem_if_lpddr2_emif_0_status_local_init_done                : out   std_logic;                                        -- local_init_done
			mem_if_lpddr2_emif_0_status_local_cal_success              : out   std_logic;                                        -- local_cal_success
			mem_if_lpddr2_emif_0_status_local_cal_fail                 : out   std_logic;                                        -- local_cal_fail
			memory_mem_ca                                              : out   std_logic_vector(9 downto 0);                     -- mem_ca
			memory_mem_ck                                              : out   std_logic_vector(0 downto 0);                     -- mem_ck
			memory_mem_ck_n                                            : out   std_logic_vector(0 downto 0);                     -- mem_ck_n
			memory_mem_cke                                             : out   std_logic_vector(0 downto 0);                     -- mem_cke
			memory_mem_cs_n                                            : out   std_logic_vector(0 downto 0);                     -- mem_cs_n
			memory_mem_dm                                              : out   std_logic_vector(3 downto 0);                     -- mem_dm
			memory_mem_dq                                              : inout std_logic_vector(31 downto 0) := (others => 'X'); -- mem_dq
			memory_mem_dqs                                             : inout std_logic_vector(3 downto 0)  := (others => 'X'); -- mem_dqs
			memory_mem_dqs_n                                           : inout std_logic_vector(3 downto 0)  := (others => 'X'); -- mem_dqs_n
			merged_resets_in_reset_reset_n                             : in    std_logic                     := 'X';             -- reset_n
			oct_rzqin                                                  : in    std_logic                     := 'X';             -- rzqin
			tse_mac_mac_gmii_connection_gmii_rx_d                      : in    std_logic_vector(7 downto 0)  := (others => 'X'); -- gmii_rx_d
			tse_mac_mac_gmii_connection_gmii_rx_dv                     : in    std_logic                     := 'X';             -- gmii_rx_dv
			tse_mac_mac_gmii_connection_gmii_rx_err                    : in    std_logic                     := 'X';             -- gmii_rx_err
			tse_mac_mac_gmii_connection_gmii_tx_d                      : out   std_logic_vector(7 downto 0);                     -- gmii_tx_d
			tse_mac_mac_gmii_connection_gmii_tx_en                     : out   std_logic;                                        -- gmii_tx_en
			tse_mac_mac_gmii_connection_gmii_tx_err                    : out   std_logic;                                        -- gmii_tx_err
			tse_mac_mac_mdio_connection_mdc                            : out   std_logic;                                        -- mdc
			tse_mac_mac_mdio_connection_mdio_in                        : in    std_logic                     := 'X';             -- mdio_in
			tse_mac_mac_mdio_connection_mdio_out                       : out   std_logic;                                        -- mdio_out
			tse_mac_mac_mdio_connection_mdio_oen                       : out   std_logic;                                        -- mdio_oen
			tse_mac_mac_mii_connection_mii_rx_d                        : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- mii_rx_d
			tse_mac_mac_mii_connection_mii_rx_dv                       : in    std_logic                     := 'X';             -- mii_rx_dv
			tse_mac_mac_mii_connection_mii_rx_err                      : in    std_logic                     := 'X';             -- mii_rx_err
			tse_mac_mac_mii_connection_mii_tx_d                        : out   std_logic_vector(3 downto 0);                     -- mii_tx_d
			tse_mac_mac_mii_connection_mii_tx_en                       : out   std_logic;                                        -- mii_tx_en
			tse_mac_mac_mii_connection_mii_tx_err                      : out   std_logic;                                        -- mii_tx_err
			tse_mac_mac_mii_connection_mii_crs                         : in    std_logic                     := 'X';             -- mii_crs
			tse_mac_mac_mii_connection_mii_col                         : in    std_logic                     := 'X';             -- mii_col
			tse_mac_mac_misc_connection_xon_gen                        : in    std_logic                     := 'X';             -- xon_gen
			tse_mac_mac_misc_connection_xoff_gen                       : in    std_logic                     := 'X';             -- xoff_gen
			tse_mac_mac_misc_connection_ff_tx_crc_fwd                  : in    std_logic                     := 'X';             -- ff_tx_crc_fwd
			tse_mac_mac_misc_connection_ff_tx_septy                    : out   std_logic;                                        -- ff_tx_septy
			tse_mac_mac_misc_connection_tx_ff_uflow                    : out   std_logic;                                        -- tx_ff_uflow
			tse_mac_mac_misc_connection_ff_tx_a_full                   : out   std_logic;                                        -- ff_tx_a_full
			tse_mac_mac_misc_connection_ff_tx_a_empty                  : out   std_logic;                                        -- ff_tx_a_empty
			tse_mac_mac_misc_connection_rx_err_stat                    : out   std_logic_vector(17 downto 0);                    -- rx_err_stat
			tse_mac_mac_misc_connection_rx_frm_type                    : out   std_logic_vector(3 downto 0);                     -- rx_frm_type
			tse_mac_mac_misc_connection_ff_rx_dsav                     : out   std_logic;                                        -- ff_rx_dsav
			tse_mac_mac_misc_connection_ff_rx_a_full                   : out   std_logic;                                        -- ff_rx_a_full
			tse_mac_mac_misc_connection_ff_rx_a_empty                  : out   std_logic;                                        -- ff_rx_a_empty
			tse_mac_mac_status_connection_set_10                       : in    std_logic                     := 'X';             -- set_10
			tse_mac_mac_status_connection_set_1000                     : in    std_logic                     := 'X';             -- set_1000
			tse_mac_mac_status_connection_eth_mode                     : out   std_logic;                                        -- eth_mode
			tse_mac_mac_status_connection_ena_10                       : out   std_logic;                                        -- ena_10
			tse_mac_pcs_mac_rx_clock_connection_clk                    : in    std_logic                     := 'X';             -- clk
			tse_mac_pcs_mac_tx_clock_connection_clk                    : in    std_logic                     := 'X'              -- clk
		);
	end component Nios_CPU_qsys;

